name: Production CI/CD Pipeline

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

env:
    REGISTRY: gcr.io
    PROJECT_ID: ${{ secrets.PROJECT_ID }}
    IMAGE_NAME: api-service

jobs:
    build-and-test:
        runs-on: ubuntu-latest

        permissions:
            id-token: write # Required for Workload Identity Federation
            contents: read # Required for checking out the code

        steps:
            - uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Docker layer caching
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Authenticate to Google Cloud
              uses: google-github-actions/auth@v1
              with:
                  workload_identity_provider: "${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}"
                  service_account: "${{ secrets.SERVICE_ACCOUNT }}"

            - name: Configure Docker
              run: gcloud auth configure-docker

            - name: Build and Push Image
              run: |
                  docker buildx build \
                    --cache-from=type=local,src=/tmp/.buildx-cache \
                    --cache-to=type=local,dest=/tmp/.buildx-cache-new \
                    --push \
                    -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ github.sha }} \
                    -t ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest \
                    .

            - name: Move cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    # deploy:
    #     needs: build-and-test
    #     runs-on: ubuntu-latest
    #     if: github.ref == 'refs/heads/master'

    #     steps:
    #         - name: Deploy to GKE
    #           run: |
    #               gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER }} \
    #                 --zone ${{ secrets.GKE_ZONE }}
    #               kubectl rollout restart deployment/${{ env.IMAGE_NAME }}
